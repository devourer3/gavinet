{"version":3,"sources":["utils/cookieUtil.ts","utils/Globals.ts","api/api.ts","containers/home.tsx","modules/global.modules.ts","components/searchItem.tsx","containers/search.tsx","containers/testPage.tsx","App.tsx","serviceWorker.ts","modules/rootReducer.ts","static/lang/i18n.ts","index.tsx","static/images/close.svg","static/images/memo.svg","static/images/refresh.svg","static/images/edit.svg"],"names":["getCookie","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","logObjectToJson","object","console","log","JSON","stringify","axiosInstance","axios","create","baseURL","timeout","timeoutErrorMessage","gvRequest","method","uri","a","data","option","url","err","response","status","alert","Promise","reject","Home","useTranslation","t","history","i18n","useHistory","useState","corpName","setCorpName","sendCorps","e","post","then","token","expires","tokens","date","Date","setTime","getTime","toUTCString","setTokenCookie","headers","authorization","cookies","value","catch","reason","goPage","destination","push","useEffect","className","id","onClick","hidden","onChange","target","onChangeName","actionShowDialog","createAction","args","actionDismissDialog","actionModifyQuestion","actionModifyTitle","actionModifyContent","globalModules","createReducer","isShowDialog","isModifyDialog","deleteId","modifyId","titleModified","contentModified","handleAction","state","action","payload","title","content","dialog","SearchItem","props","useSelector","globals","shallowEqual","originText","keyword","dispatcher","useDispatch","_id","key","src","icDelete","alt","event","icEdit","articleTitle","articleContent","searchKeyword","map","word","index","colorContent","Search","globalState","getAllQuestions","password","setPassword","setDialogShow","isShowRefresh","setShowRefresh","item","setItem","search","setSearch","article","setArticle","questions","finally","searchItem","items","flatMap","value1","onClickShowAdd","onKeyUp","undefined","keyCode","onKeyUpEnter","icClose","onChangeTitle","onChangeContent","type","autoComplete","trim","createPw","renderAddDialog","onChangeMTitle","onChangeMContent","modifyPw","renderModifyDialog","renderArticles","deletePw","renderDeletePopup","icRefresh","icMemo","TestPage","App","exact","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","resources","en","translation","ko","i18next","use","initReactI18next","init","lng","fallbackLng","debug","keySeparator","interpolation","escapeValue","dotenv","config","theme","createMuiTheme","palette","typography","fontFamily","fontSize","fontWeightRegular","store","createStore","ReactDOM","render","StrictMode","CssBaseline","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.c823feca.chunk.js","sourcesContent":["export const setTokenCookie = (token: string) => {\n  let expires: string;\n  const tokens:string[] = token.split(';')\n  // if (days) {\n  const date = new Date();\n  date.setTime(date.getTime() + (60 * 60));\n  expires = \"; expires=\" + date.toUTCString();\n  // }\n  document.cookie = tokens[0] + expires + \"; path=/\";\n};\n\n\nexport const getCookie = () => {\n  const nameEQ = \"Authorization=\";\n  const ca = document.cookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n};\n\nexport const deleteCookie = function (name: string) {\n  const date = new Date();\n  document.cookie = name + \"= \" + \"; expires=\" + date.toUTCString() + \"; path=/\";\n};\n","interface isDev {\n  IS_DEV: boolean\n}\n\nexport const IS_DEV = true;\n\nexport function logObjectToJson(object:object) {\n  console.log(`JSON: ${JSON.stringify(object)}`);\n}\n\n// export function getJson(object:object) {\n//   return JSON.parse(JSON.stringify(object));\n// }\n","import axios, {AxiosResponse} from 'axios';\nimport {useTranslation} from \"react-i18next\";\nimport * as Global from '../utils/Globals'\nimport {logObjectToJson} from \"../utils/Globals\";\nimport {rejects} from \"assert\";\n\n// const {t, i18n} = useTranslation();\n\nconst baseURL = Global.IS_DEV ? \"http://localhost:8888\" : \"https://annoyinggavin.herokuapp.com/\"\n\nexport const getAuthHeader = () => {\n  return {} // get Cookie Token\n}\n\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 10000,\n  timeoutErrorMessage: 'TIME OUT!!!!'\n});\n\nexport async function gvRequest(method: string, uri: string, data: any = {}, option: any = {}): Promise<any> {\n  try {\n    return await axiosInstance({\n      method: method,\n      url: `${uri}`,\n      data,\n      ...option\n    });\n  } catch (error) {\n    const err:any = error.response;\n    logObjectToJson(err);\n    switch (err.status) {\n      case 409:\n        alert(\"비밀번호 오류\");\n        break;\n    }\n    return Promise.reject(\"INVALID ERROR\");\n    // return new DOMException(\"INVALID ERROR\");\n  }\n};\n\nconst gvRequestWithAuth = async (method: string, uri: string, data = {}, options = {}) => {\n  return gvRequest(method, uri, data, {...options, ...await getAuthHeader()});\n};\n","import {useDispatch, useSelector} from 'react-redux';\nimport React, {useEffect, useState} from 'react';\nimport {makeStyles, useTheme} from '@material-ui/styles';\nimport {Button, Container, Typography} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link, withRouter, useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport * as bcrypt from 'bcrypt';\nimport {RestaurantInterface} from \"../interface/restaurant.interface\";\nimport {getCookie, setTokenCookie} from \"../utils/cookieUtil\";\nimport {gvRequest} from '../api/api'\nimport '../static/styles/home.scss'\n\n// type Props = {\n//   button: any,\n//   component: any\n// }\n\n// 인라인 스타일은 자동완성이 안 됨.\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     flexFlow: \"column\",\n//     height: \"100%\",\n//     alignItems: \"center\",\n//   },\n//   button: {\n//     width: \"200px\",\n//     marginTop: \"40px\",\n//   }\n// }));\n\nfunction Home() {\n  // const classes = useStyles();\n  const {t, i18n} = useTranslation();\n  // const history = useHistory();\n  const history = useHistory();\n  const [corpName, setCorpName] = useState(\"\")\n\n  const onChangeName = (e: any) => {\n    setCorpName(e.target.value);\n  }\n\n  // TODO 헤더에다 토큰 쿠키 넣어서 합시다.\n  const sendCorps = (e: any) => {\n    axios.post('http://localhost:8888/auth/anonymous',\n      {\"corpName\": corpName})\n      .then((response) => {\n        setTokenCookie(response.headers.authorization);\n        console.log(getCookie());\n        axios.post('http://localhost:8888/auth/fuckup', {cookies: getCookie()})\n          .then(value => {\n            console.log(value);\n          })\n          .catch(reason => {\n            console.log(reason);\n          })\n      })\n      .catch(reason => {\n        console.log(reason);\n      })\n  };\n\n  function goPage(destination: string) {\n    switch (destination) {\n      case 'search':\n        history.push('/search');\n        break;\n      default:\n      case 'test':\n        history.push('/test');\n        break;\n    }\n  }\n\n  async function getRestaurant() {\n    let result = await gvRequest('get', 'restaurant', null, null);\n    console.log(result.data);\n    // <RestaurantInterface[]>('http://localhost:8888/restaurant')\n    //   .then((response) => {\n    //     console.log(response.data);\n    //   });\n  }\n\n  useEffect(() => {\n    // Use [] as second argument in useEffect for not rendering each time\n  }, []);\n  return (\n    <>\n      <div className={\"home-container\"}>\n        <span className={\"home-title\"}>{t('S0000')}</span>\n        <button id={\"home-btn\"}\n                className={\"home-cs\"}\n                onClick={(e) => {\n                  goPage('search')\n                }}>\n          {t('S0001')}\n        </button>\n        <button id={\"home-btn\"}\n                className={\"home-lunch\"}>\n          {t('S0002')}\n        </button>\n        <button id={\"home-btn\"}\n                className={\"home-what\"}\n                onClick={(e) => {\n                  goPage('test')\n                }}>\n          {t('S0003')}\n        </button>\n        <span\n          hidden={true}\n          className={\"input-wrapper\"}>\n          <input className={\"corp-form\"}\n                 onChange={(e) => {\n                   onChangeName(e)\n                 }}\n          />\n          <button\n            hidden={true}\n            className={\"btn-send\"}\n            onClick={(e) => {\n              sendCorps(e)\n            }}>전송</button>\n        </span>\n      </div>\n    </>\n  )\n}\n\nexport default Home;\n","import {\n  createAction,\n  ActionType,\n  createReducer\n} from 'typesafe-actions';\n\ninterface GlobalState {\n  isShowDialog: boolean,\n  isModifyDialog: boolean,\n  deleteId: string,\n  modifyId: string,\n  titleModified: string,\n  contentModified: string\n}\n\nconst initialState: GlobalState = {\n  isShowDialog: false,\n  isModifyDialog: false,\n  deleteId: \"\",\n  modifyId: \"\",\n  titleModified: \"\",\n  contentModified: \"\"\n};\n\nconst SHOW_DIALOG = 'global/SHOW_DIALOG';\nconst DISMISS_DIALOG = 'global/DISMISS_DIALOG';\nconst MODIFY_QUESTION = 'global/MODIFY_QUESTION';\nconst MODIFY_TITLE = 'global/MODIFY_TITLE';\nconst MODIFY_CONTENT = 'global/MODIFY_CONTENT';\n\n\nexport const actionShowDialog = createAction(SHOW_DIALOG, args => args)();\nexport const actionDismissDialog = createAction(DISMISS_DIALOG)();\nexport const actionModifyQuestion = createAction(MODIFY_QUESTION, args => args)();\nexport const actionModifyTitle = createAction(MODIFY_TITLE, args => args)();\nexport const actionModifyContent = createAction(MODIFY_CONTENT, args => args)();\n\nconst globalAction = {\n  actionShowDialog,\n  actionDismissDialog,\n  actionModifyQuestion,\n  actionModifyTitle,\n  actionModifyContent\n};\n\ntype GlobalAction = ActionType<typeof globalAction>;\n\nconst globalModules = createReducer<GlobalState, GlobalAction>(initialState)\n  .handleAction(actionShowDialog, (state, action) => (\n    {\n      ...state,\n      isShowDialog: true,\n      deleteId: action.payload.id\n    }\n  ))\n  .handleAction(actionDismissDialog, (state, action) => (\n    {\n      ...state,\n      isShowDialog: false,\n      deleteId: \"\"\n    }\n  ))\n  .handleAction(actionModifyQuestion, (state, action) => (\n    {\n      ...state,\n      modifyId: action.payload.id,\n      titleModified: action.payload.title,\n      contentModified: action.payload.content,\n      isModifyDialog: action.payload.dialog\n    }\n  ))\n  .handleAction(actionModifyTitle, (state, action) => (\n    {\n      ...state,\n      titleModified: action.payload.title,\n    }\n  ))\n  .handleAction(actionModifyContent, (state, action) => (\n    {\n      ...state,\n      contentModified: action.payload.content,\n    }\n  ))\n\n;\n\nexport default globalModules;\n","import React, {useCallback, useEffect, useState, Fragment} from 'react';\nimport '../static/styles/searchItem.scss'\nimport articles from '../interface/articles.interface';\nimport icDelete from '../static/images/close.svg';\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../modules/rootReducer\";\nimport {actionModifyQuestion, actionShowDialog} from \"../modules/global.modules\";\nimport icEdit from \"../static/images/edit.svg\";\n\nfunction SearchItem(props: articles) {\n  const globalState = useSelector(((state: RootState) => state.globals), shallowEqual);\n  const dispatcher = useDispatch();\n\n  function colorTitle(originText: string, keyword: string) {\n    return (\n      <div className={\"search-title\"}>\n        {\n          originText.split(keyword).map((word, index) => {\n            return (\n              <Fragment key={index}>\n                <span className={\"search-title-default\"}>{word}</span>\n                {\n                  (index !== originText.split(keyword).length - 1) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={\"search-title-color\"}>{keyword}</span>\n                }\n              </Fragment>\n            );\n          })\n        }\n      </div>\n    )\n  }\n\n  function colorContent(originText: string, keyword: string) {\n    return (\n      <div className={\"search-content\"}>\n        {\n          // originText.split('/n').map()\n          originText.split(keyword).map((word, index) => {\n            return (\n              <Fragment key={index}>\n                <span className={\"search-content-default\"}>{word}</span>\n                {\n                  (index !== originText.split(keyword).length - 1) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={\"search-content-color\"}>{keyword}</span>\n                }\n              </Fragment>\n            );\n          })\n        }\n      </div>\n    )\n  }\n\n\n  return (\n    <li\n      id={props._id}\n      key={props._id}\n      className={\"search-item\"}>\n      <img className={\"search-trash\"}\n           src={icDelete}\n           alt={\"\"}\n           onClick={(event) => {\n             dispatcher(actionShowDialog({id: props._id}));\n           }}\n      />\n      <img\n        className={\"search-edit\"}\n        src={icEdit}\n        alt={\"\"}\n        onClick={(event) => {\n          dispatcher(actionModifyQuestion({id: props._id, title: props.articleTitle, content: props.articleContent, dialog: true}))\n        }}/>\n      {colorTitle(props.articleTitle, props.searchKeyword)}\n      {colorContent(props.articleContent, props.searchKeyword)}\n    </li>\n  )\n}\n\nexport default SearchItem;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport axios from 'axios';\nimport {RestaurantInterface} from \"../interface/restaurant.interface\";\nimport {getCookie, setTokenCookie} from \"../utils/cookieUtil\";\nimport * as bcrypt from 'bcrypt';\nimport {Link, withRouter, useHistory} from 'react-router-dom';\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\nimport {makeStyles, useTheme} from '@material-ui/styles';\nimport {Button, Container, Typography} from \"@material-ui/core\";\nimport '../static/styles/search.scss'\nimport icMemo from '../static/images/memo.svg'\nimport icClose from '../static/images/close.svg'\nimport icRefresh from '../static/images/refresh.svg'\nimport {gvRequest} from \"../api/api\";\nimport SearchItem from \"../components/searchItem\";\nimport ArticlesInterface from \"../interface/articles.interface\";\nimport dotenv from \"dotenv\";\nimport {RootState} from \"../modules/rootReducer\";\nimport {\n  actionDismissDialog,\n  actionModifyContent,\n  actionModifyQuestion,\n  actionModifyTitle\n} from \"../modules/global.modules\";\n\nfunction Search() {\n  const globalState = useSelector(((state: RootState) => state.globals), shallowEqual);\n  const dispatcher = useDispatch();\n  const {t, i18n} = useTranslation();\n  const history = useHistory();\n  useEffect(() => {\n    // Use [] as second argument in useEffect for not rendering each time\n    getAllQuestions();\n  }, []);\n\n  // const [deleteId, setDeleteId] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [isShowDialog, setDialogShow] = useState<boolean>(false);\n  const [isShowRefresh, setShowRefresh] = useState<boolean>(false);\n  const [item, setItem] = useState<ArticlesInterface[]>([]); // 검색 결과물\n  const [search, setSearch] = useState<string>(\"\"); // 검색어\n  const [article, setArticle] = useState<any>({ // 작성물\n    \"articleTitle\": \"\",\n    \"articleContent\": \"\"\n  });\n\n  const getAllQuestions = () => {\n    gvRequest('get', 'question')\n      .then(value => {\n        setItem(value.data.questions);\n      })\n      .catch(reason => {\n        console.log(`FAIL: ${reason}`);\n      })\n      .finally(() => {\n        setShowRefresh(false);\n      })\n  }\n\n  const onKeyUpEnter = (e: any) => {\n    if (search.length > 0) {\n      if (e.keyCode !== undefined) {\n        if (e.keyCode === 13) {\n          searchItem();\n        }\n        return;\n      } else if (e.key !== undefined) {\n        if (e.key === 'Enter') {\n          searchItem();\n        }\n        return;\n      }\n    }\n  }\n\n  const searchItem = () => {\n    gvRequest('post', 'question/search', {articleTitle: search}, null)\n      .then(value => {\n        let items: ArticlesInterface[] = value.data.questions;\n        items.flatMap((value1, index) => {\n          value1.searchKeyword = search;\n        })\n        if (items.length > 0) {\n          setShowRefresh(false);\n          setItem(items);\n        } else {\n          setShowRefresh(true);\n          setItem(items);\n        }\n      })\n      .catch(reason => {\n        console.log(`ERROR: ${reason}`);\n      })\n      .finally(() => {\n        setSearch(\"\");\n      });\n  }\n\n  const deleteQuestion = (deleteId: string) => {\n    gvRequest('delete', `question/delete/${deleteId}`, null, {headers: {deletePw: password}})\n      .then(value => {\n        getAllQuestions();\n        dispatcher(actionDismissDialog());\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n      })\n  }\n\n  const onClickShowAdd = () => {\n    setArticle({});\n    setDialogShow(!isShowDialog);\n  }\n\n  const onChangeMTitle = (e:any) => {\n    dispatcher(actionModifyTitle({title: e.target.value}));\n  }\n\n  const onChangeMContent = (e:any) => {\n    dispatcher(actionModifyContent({content: e.target.value}));\n  }\n\n  const onChangeTitle = (e: any) => {\n    setArticle({...article, \"articleTitle\": e.target.value});\n  }\n\n  const onChangeContent = (e: any) => {\n    setArticle({...article, \"articleContent\": e.target.value});\n  }\n\n  const onClickWrite = (e: any) => {\n    if (article.articleTitle && article.articleContent && password.trim().length > 0)\n      if (article.articleTitle.trim().length > 0 && article.articleContent.trim().length > 0) {\n        gvRequest('post', 'question/create', article, {headers: {createPw: password}})\n          .then(value => {\n            onClickShowAdd();\n            getAllQuestions();\n            // setItem(oldArray => [...oldArray, value.data.questions]); // 기존 state에 push하는 법\n          })\n          .catch(reason => {\n            console.log(`Error: ${reason}`);\n          })\n          .finally();\n      }\n  }\n\n  const onClickModify = (e: any) => {\n    if (globalState.titleModified && globalState.contentModified && password.trim().length > 0)\n      if (globalState.titleModified.trim().length > 0 && globalState.contentModified.trim().length > 0) {\n        gvRequest('put', `question/modify/${globalState.modifyId}`, {articleTitle: globalState.titleModified, articleContent: globalState.contentModified}, {\n          headers: {\n            modifyPw: password\n          }\n        })\n          .then(value => {\n            dispatcher(actionModifyQuestion({dialog: false}));\n            getAllQuestions();\n            // setItem(oldArray => [...oldArray, value.data.questions]); // 기존 state에 push하는 법\n          })\n          .catch(reason => {\n            console.log(`Error: ${reason}`);\n          })\n          .finally();\n      }\n  }\n\n  function renderDeletePopup() {\n    if (globalState.isShowDialog) {\n      return (\n        <>\n          <div className={\"sd-delete\"}>\n            <div className={\"delete-container\"}>\n              <span className={\"delete-title\"}>{t('S0004')}</span>\n              <form>\n                <input\n                  type=\"password\"\n                  autoComplete={\"on\"}\n                  className={\"delete-pw\"}\n                  value={password || \"\"}\n                  onChange={event => {\n                    setPassword(event.target.value)\n                  }}/>\n              </form>\n              <div className={\"delete-btn-container\"}>\n                <span\n                  className={\"delete-confirm\"}\n                  onClick={(event => {\n                    deleteQuestion(globalState.deleteId);\n                  })}>\n                  {t('W0005')}\n                </span>\n                <span\n                  className={\"delete-cancel\"}\n                  onClick={(event) => {\n                    dispatcher(actionDismissDialog());\n                  }}>\n                  {t('W0006')}\n                </span>\n              </div>\n            </div>\n          </div>\n        </>\n      )\n    }\n  }\n\n  function renderArticles() {\n    if (!isShowRefresh) {\n      return (\n        <ul className={\"search-articles\"}>\n          {\n            item.map(\n              (value, index) =>\n                <SearchItem key={index}\n                            searchKeyword={value.searchKeyword}\n                            articleTitle={value.articleTitle}\n                            articleContent={value.articleContent}\n                            _id={value._id}/>)\n          }\n        </ul>\n      )\n    }\n  }\n\n  function renderAddDialog() {\n    if (isShowDialog) {\n      return (\n        <div className={\"search-dialog\"}>\n          <div className={\"sd-container\"}>\n            <img\n              className={\"sd-close\"}\n              src={icClose}\n              onClick={onClickShowAdd}\n              alt={\"\"}/>\n            <span id={\"sd-desc\"}>{t('W0001')}</span>\n            <input\n              className={\"sd-title\"}\n              value={article.articleTitle || \"\"}\n              onChange={(e) => {\n                onChangeTitle(e)\n              }}\n            />\n            <span id={\"sd-desc\"}>{t('W0002')}</span>\n            <textarea\n              className={\"sd-content\"}\n              value={article.articleContent || \"\"}\n              onChange={(e) => {\n                onChangeContent(e)\n              }}\n            />\n            <span id={\"sd-desc\"}>{t('W0007')}</span>\n            <form className={\"sd-pw-form\"}>\n              <input\n                className={\"sd-password\"}\n                value={password || \"\"}\n                type=\"password\"\n                autoComplete={\"on\"}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </form>\n            <button\n              className={\"sd-write\"}\n              onClick={(e) => {\n                onClickWrite(e)\n              }}\n            >{t('W0003')}</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function renderModifyDialog() {\n    if (globalState.isModifyDialog) {\n      return (\n        <div className={\"search-dialog\"}>\n          <div className={\"sd-container\"}>\n            <img\n              className={\"sd-close\"}\n              src={icClose}\n              onClick={(e) => {\n                dispatcher(actionModifyQuestion({dialog: false}));\n              }}\n              alt={\"\"}/>\n            <span id={\"sd-desc\"}>{t('W0001')}</span>\n            <input\n              className={\"sd-title\"}\n              value={globalState.titleModified || \"\"}\n              onChange={(e) => {\n                onChangeMTitle(e)\n              }}\n            />\n            <span id={\"sd-desc\"}>{t('W0002')}</span>\n            <textarea\n              className={\"sd-content\"}\n              value={globalState.contentModified || \"\"}\n              onChange={(e) => {\n                onChangeMContent(e)\n              }}\n            />\n            <span id={\"sd-desc\"}>{t('W0007')}</span>\n            <form className={\"sd-pw-form\"}>\n              <input\n                className={\"sd-password\"}\n                value={password || \"\"}\n                type=\"password\"\n                autoComplete={\"on\"}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </form>\n            <button\n              className={\"sd-modify\"}\n              onClick={(e) => {\n                onClickModify(e)\n              }}\n            >{t('W0008')}</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <>\n      <header className={\"search-header\"}>\n        <input\n          className={\"search-input\"}\n          value={search}\n          onKeyUp={(e) => {\n            onKeyUpEnter(e);\n          }}\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n        />\n      </header>\n      <div className={\"search-container\"}>\n        {renderAddDialog()}\n        {renderModifyDialog()}\n        {renderArticles()}\n        {renderDeletePopup()}\n        {\n          isShowRefresh &&\n\t\t\t\t\t\t\t\t\t\t<img className={\"search-refresh\"}\n\t\t\t\t\t\t\t\t\t\t     src={icRefresh}\n\t\t\t\t\t\t\t\t\t\t     onClick={(e) => {\n                 getAllQuestions();\n               }}\n\t\t\t\t\t\t\t\t\t\t     alt={\"\"}>\n\t\t\t\t\t\t\t\t\t\t</img>\n        }\n        <img\n          className={\"search-add-btn\"}\n          onClick={onClickShowAdd}\n          src={icMemo}\n          alt={\"\"}/>\n      </div>\n    </>\n  )\n}\n\nexport default Search;\n","import React, {useEffect, useState} from 'react';\nimport SearchItem from \"../components/searchItem\";\n\nfunction TestPage() {\n  return (\n    <>\n      <div className={\"test-container\"}>\n        {SearchItem({_id: \"10203040\", articleTitle:\"테스트\", articleContent:\"입니다.\", searchKeyword:\"\"})}\n      </div>\n    </>\n  )\n}\n\nexport default TestPage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport {Route, Switch, Redirect, withRouter, BrowserRouter, useHistory} from 'react-router-dom';\nimport './static/styles/base.scss'\nimport Home from \"./containers/home\";\nimport Search from \"./containers/search\";\nimport TestPage from \"./containers/testPage\";\nimport icHome from './static/images/home.svg';\nimport {useTranslation} from \"react-i18next\";\n\n// https://css-tricks.com/the-hooks-of-react-router/\nfunction App() {\n  const history = useHistory();\n  const {t, i18n} = useTranslation();\n  return (\n    <>\n      <span\n        className={\"home-btn\"}\n        onClick={(event) => {\n          history.push('/');\n        }}>{t('W0004')}</span>\n      <Switch>\n        <Route exact={true} path='/'>\n          <Home/>\n        </Route>\n        <Route path='/search'>\n          <Search/>\n        </Route>\n        <Route path='/test'>\n          <TestPage/>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this interface and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\nimport counterModules from \"./counter.modules\";\nimport globalModules from \"./global.modules\"\n\nconst rootReducer = combineReducers({\n  // counter: counterModules,\n  globals: globalModules\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from '../lang/en.json';\nimport ko from '../lang/ko.json';\n\nconst resources = {\n  en: {\n    translation: en\n  },\n  ko: {\n    translation: ko\n  }\n};\n\ni18next.use(initReactI18next)\n  .init({\n    resources: resources,\n    lng: \"ko\",\n    fallbackLng: 'ko',\n    // ns: ['translation'],\n    // defaultNS: \"translation\",\n    debug: true,\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false\n    } // react already safes from xss\n  });\n\nexport default i18next;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/styles/base.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport {CssBaseline} from \"@material-ui/core\";\nimport rootReducer from \"./modules/rootReducer\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport './static/lang/i18n';\nimport {applyMiddleware, createStore} from \"redux\";\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    // primary: {\n    //   main: \"#d93025\",\n    //   light: \"#fce8e6\",\n    //   dark: \"#cccccc\",\n    //   contrastText: \"#3c4043\"\n    // },\n    // secondary: {\n    //   light: \"#ff6659\",\n    //   main: \"#d32f2f\",\n    //   dark: \"#9a0007\",\n    //   contrastText: \"#ffffff\"\n    // },\n    // text: {\n    //   primary: \"#3c4043\",\n    //   secondary: \"rgba(0, 0, 0, 0.54)\",\n    // }\n  },\n  typography: {\n    fontFamily: 'Roboto, sans-serif',\n    fontSize: 14,\n    fontWeightRegular: 500,\n  },\n});\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <App/>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/close.fd77d42c.svg\";","module.exports = __webpack_public_path__ + \"static/media/memo.32968486.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh.96c48931.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.46ecce54.svg\";"],"sourceRoot":""}