{"version":3,"sources":["utils/cookieUtil.ts","api/api.ts","containers/home.tsx","components/searchItem.tsx","containers/search.tsx","containers/testPage.tsx","App.tsx","serviceWorker.ts","modules/counter.ts","interface/types.ts","static/lang/i18n.ts","index.tsx","static/images/memo.svg","static/images/close.svg","static/images/refresh.svg"],"names":["getCookie","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","axiosInstance","axios","create","baseURL","timeout","timeoutErrorMessage","gvRequest","method","uri","a","data","option","url","console","log","Home","useTranslation","t","history","i18n","useHistory","useState","corpName","setCorpName","sendCorps","e","post","then","response","token","expires","tokens","date","Date","setTime","getTime","toUTCString","setTokenCookie","headers","authorization","cookies","value","catch","reason","goPage","destination","push","useEffect","className","id","onClick","onChange","target","onChangeName","SearchItem","props","_id","key","articleTitle","articleContent","Search","isShowDialog","setDialogShow","isShowRefresh","setShowRefresh","item","setItem","search","setSearch","article","setArticle","getAllQuestions","questions","finally","searchItem","items","onClickShowAdd","onKeyUp","undefined","keyCode","onKeyUpEnter","src","icClose","alt","onChangeTitle","onChangeContent","renderAddDialog","map","index","renderArticles","icRefresh","icMemo","TestPage","App","exact","path","component","Boolean","window","location","hostname","match","increase","createAction","decrease","increaseBy","counter","createReducer","count","handleAction","state","action","payload","rootReducer","combineReducers","resources","en","translation","ko","i18next","use","initReactI18next","init","lng","fallbackLng","debug","keySeparator","interpolation","escapeValue","store","createStore","theme","createMuiTheme","palette","type","typography","fontFamily","fontSize","fontWeightRegular","ReactDOM","render","StrictMode","CssBaseline","forceRefresh","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b91cf52d.chunk.js","sourcesContent":["export const setTokenCookie = (token: string) => {\n  let expires: string;\n  const tokens:string[] = token.split(';')\n  // if (days) {\n  const date = new Date();\n  date.setTime(date.getTime() + (60 * 60));\n  expires = \"; expires=\" + date.toUTCString();\n  // }\n  document.cookie = tokens[0] + expires + \"; path=/\";\n};\n\n\nexport const getCookie = () => {\n  const nameEQ = \"Authorization=\";\n  const ca = document.cookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n};\n\nexport const deleteCookie = function (name: string) {\n  const date = new Date();\n  document.cookie = name + \"= \" + \"; expires=\" + date.toUTCString() + \"; path=/\";\n};\n","import axios, {AxiosResponse} from 'axios';\nimport {useTranslation} from \"react-i18next\";\nimport * as Global from '../utils/Globals'\n\n// const {t, i18n} = useTranslation();\n\nconst baseURL = Global.IS_DEV ? \"http://localhost:8888\" : \"https://annoyinggavin.herokuapp.com/\"\n\nexport const getAuthHeader = () => {\n  return {} // get Cookie Token\n}\n\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  timeoutErrorMessage: 'TIME OUT!!!!'\n});\n\nexport async function gvRequest(method: string, uri: string, data: any = {}, option: any = {}): Promise<any> {\n  try {\n    return await axiosInstance({\n      method: method,\n      url: `${uri}`,\n      data,\n      ...option\n    });\n  } catch (error) {\n    console.log('req error', error);\n    return error;\n  }\n};\n\nconst gvRequestWithAuth = async (method: string, uri: string, data = {}, options = {}) => {\n  return gvRequest(method, uri, data, {...options, ...await getAuthHeader()});\n};\n","import {useDispatch, useSelector} from 'react-redux';\nimport React, {useEffect, useState} from 'react';\nimport {makeStyles, useTheme} from '@material-ui/styles';\nimport {Button, Container, Typography} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link, withRouter, useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport * as bcrypt from 'bcrypt';\nimport {RestaurantInterface} from \"../interface/restaurant.interface\";\nimport {getCookie, setTokenCookie} from \"../utils/cookieUtil\";\nimport {gvRequest} from '../api/api'\nimport '../static/styles/home.scss'\n\n// type Props = {\n//   button: any,\n//   component: any\n// }\n\n// 인라인 스타일은 자동완성이 안 됨.\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     flexFlow: \"column\",\n//     height: \"100%\",\n//     alignItems: \"center\",\n//   },\n//   button: {\n//     width: \"200px\",\n//     marginTop: \"40px\",\n//   }\n// }));\n\nfunction Home() {\n  // const classes = useStyles();\n  const {t, i18n} = useTranslation();\n  // const history = useHistory();\n  const history = useHistory();\n  const [corpName, setCorpName] = useState(\"\")\n\n  const onChangeName = (e: any) => {\n    setCorpName(e.target.value);\n  }\n\n  // TODO 헤더에다 토큰 쿠키 넣어서 합시다.\n  const sendCorps = (e: any) => {\n    axios.post('http://localhost:8888/auth/anonymous',\n      {\"corpName\": corpName})\n      .then((response) => {\n        setTokenCookie(response.headers.authorization);\n        console.log(getCookie());\n        axios.post('http://localhost:8888/auth/fuckup', {cookies: getCookie()})\n          .then(value => {\n            console.log(value);\n          })\n          .catch(reason => {\n            console.log(reason);\n          })\n      })\n      .catch(reason => {\n        console.log(reason);\n      })\n  };\n\n  function goPage(destination: string) {\n    switch (destination) {\n      case 'search':\n        history.push('/search');\n        break;\n      default:\n      case 'test':\n        history.push('/test');\n        break;\n    }\n  }\n\n  async function getRestaurant() {\n    let result = await gvRequest('get', 'restaurant', null, null);\n    console.log(result.data);\n    // <RestaurantInterface[]>('http://localhost:8888/restaurant')\n    //   .then((response) => {\n    //     console.log(response.data);\n    //   });\n  }\n\n  useEffect(() => {\n    // Use [] as second argument in useEffect for not rendering each time\n  }, []);\n  return (\n    <>\n      <div className={\"home-container\"}>\n        <span className={\"home-title\"}>{t('S0000')}</span>\n        <button id={\"home-btn\"}\n                className={\"home-cs\"}\n                onClick={(e) => {\n                  goPage('search')\n                }}>\n          {t('S0001')}\n        </button>\n        <button id={\"home-btn\"}\n                className={\"home-lunch\"}>\n          {t('S0002')}\n        </button>\n        <button id={\"home-btn\"}\n                className={\"home-what\"}\n                onClick={(e) => {\n                  goPage('test')\n                }}>\n          {t('S0003')}\n        </button>\n        <span className={\"input-wrapper\"}>\n          <input className={\"corp-form\"}\n                 onChange={(e) => {\n                   onChangeName(e)\n                 }}\n          />\n          <button className={\"btn-send\"}\n                  onClick={(e) => {\n                    sendCorps(e)\n                  }}>전송</button>\n        </span>\n      </div>\n    </>\n  )\n}\n\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport '../static/styles/searchItem.scss'\nimport articles from '../interface/articles.interface';\n\nfunction SearchItem(props: articles) {\n  return (\n    <li\n      id={props._id}\n      key={props._id}\n      className={\"search-item\"}>\n      <span className={\"search-title\"}>{props.articleTitle}</span>\n      <span className={\"search-content\"}>{props.articleContent}</span>\n    </li>\n  )\n}\n\nexport default SearchItem;\n","import React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport axios from 'axios';\nimport {RestaurantInterface} from \"../interface/restaurant.interface\";\nimport {getCookie, setTokenCookie} from \"../utils/cookieUtil\";\nimport * as bcrypt from 'bcrypt';\nimport {Link, withRouter, useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {makeStyles, useTheme} from '@material-ui/styles';\nimport {Button, Container, Typography} from \"@material-ui/core\";\nimport '../static/styles/search.scss'\nimport icMemo from '../static/images/memo.svg'\nimport icClose from '../static/images/close.svg'\nimport icRefresh from '../static/images/refresh.svg'\nimport {gvRequest} from \"../api/api\";\nimport SearchItem from \"../components/searchItem\";\nimport ArticlesInterface from \"../interface/articles.interface\";\n\n// type Props = {\n//   button: any,\n//   component: any\n// }\n\nfunction Search() {\n  const [isShowDialog, setDialogShow] = useState<boolean>(false);\n  const [isShowRefresh, setShowRefresh] = useState<boolean>(false);\n  const [item, setItem] = useState<ArticlesInterface[]>([]);\n  const [search, setSearch] = useState<string>(\"\");\n  const [article, setArticle] = useState<object>({\n    \"articleTitle\": \"\",\n    \"articleContent\": \"\"\n  });\n  const {t, i18n} = useTranslation();\n  const history = useHistory();\n\n  useEffect(() => {\n    // Use [] as second argument in useEffect for not rendering each time\n    getAllQuestions();\n    // gvRequest('get', 'question')\n    //   .then(value => {\n    //     setItem(value.data.questions);\n    //   })\n    //   .catch(reason => {\n    //     console.log(`FAIL: ${reason}`);\n    //   })\n  }, []);\n\n  const getAllQuestions = () => {\n    gvRequest('get', 'question')\n      .then(value => {\n        setItem(value.data.questions);\n      })\n      .catch(reason => {\n        console.log(`FAIL: ${reason}`);\n      })\n      .finally(() => {\n        setShowRefresh(false);\n      })\n  }\n\n  const onKeyUpEnter = (e: any) => {\n    if (search.length > 0) {\n      if (e.keyCode !== undefined) {\n        if (e.keyCode === 13) {\n          searchItem();\n        }\n        return;\n      } else if (e.key !== undefined) {\n        if (e.key === 'Enter') {\n          searchItem();\n        }\n        return;\n      }\n    }\n  }\n\n  const searchItem = () => {\n    gvRequest('post', 'question/search', {articleTitle: search}, null)\n      .then(value => {\n        let items: ArticlesInterface[] = value.data.questions;\n        if (items.length > 0) {\n          setShowRefresh(false);\n          setItem(items);\n        } else {\n          setShowRefresh(true);\n          setItem(items);\n        }\n      })\n      .catch(reason => {\n        console.log(reason);\n      })\n      .finally(() => {\n        setSearch(\"\");\n      });\n  }\n\n  const onClickShowAdd = () => {\n    setDialogShow(!isShowDialog);\n  }\n\n  const onChangeTitle = (e: any) => {\n    setArticle({...article, \"articleTitle\": e.target.value});\n  }\n\n  const onChangeContent = (e: any) => {\n    setArticle({...article, \"articleContent\": e.target.value});\n  }\n\n  const onClickWrite = (e: any) => {\n    gvRequest('post', 'question/create', article, null)\n      .then(value => {\n        console.log(value);\n      })\n      .catch(reason => {\n        console.log(reason);\n      })\n      .finally(onClickShowAdd);\n  }\n\n  function renderArticles() {\n    if (!isShowRefresh) {\n      return (\n        <ul className={\"search-articles\"}>\n          {\n            item.map((value, index) => SearchItem(value))\n          }\n        </ul>\n      )\n    }\n  }\n\n  function renderAddDialog() {\n    if (isShowDialog) {\n      return (\n        <div className={\"search-dialog\"}>\n          <div className={\"sd-container\"}>\n            <img\n              className={\"sd-close\"}\n              src={icClose}\n              onClick={onClickShowAdd}\n              alt={\"\"}/>\n            <span id={\"sd-desc\"}>{t('W0001')}</span>\n            <input\n              className={\"sd-title\"}\n              onChange={(e) => {\n                onChangeTitle(e)\n              }}\n            />\n            <span id={\"sd-desc\"}>{t('W0002')}</span>\n            <textarea\n              className={\"sd-content\"}\n              onChange={(e) => {\n                onChangeContent(e)\n              }}\n            />\n            <button\n              className={\"sd-write\"}\n              onClick={(e) => {\n                onClickWrite(e)\n              }}\n            >{t('W0003')}</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <>\n      <header className={\"search-header\"}>\n        <input\n          className={\"search-input\"}\n          value={search}\n          onKeyUp={(e) => {\n            onKeyUpEnter(e);\n          }}\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n        />\n      </header>\n      <div className={\"search-container\"}>\n        {renderAddDialog()}\n        {renderArticles()}\n        {\n          isShowRefresh &&\n\t\t\t\t\t\t\t\t\t\t<img className={\"search-refresh\"}\n\t\t\t\t\t\t\t\t\t\t     src={icRefresh}\n\t\t\t\t\t\t\t\t\t\t     onClick={(e) => {\n                 getAllQuestions();\n               }}\n\t\t\t\t\t\t\t\t\t\t     alt={\"\"}>\n\t\t\t\t\t\t\t\t\t\t</img>\n        }\n        <img\n          className={\"search-add-btn\"}\n          onClick={onClickShowAdd}\n          src={icMemo}\n          alt={\"\"}/>\n      </div>\n    </>\n  )\n}\n\nexport default Search;\n","import React, {useEffect, useState} from 'react';\nimport SearchItem from \"../components/searchItem\";\n\nfunction TestPage() {\n  return (\n    <>\n      <div className={\"test-container\"}>\n        {SearchItem({_id: \"1234\", articleTitle:\"왓더헬\", articleContent:\"죽어임마!\"})}\n      </div>\n    </>\n  )\n}\n\nexport default TestPage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport {Route, Switch, Redirect, withRouter, BrowserRouter} from 'react-router-dom';\nimport './static/styles/base.scss'\nimport Home from \"./containers/home\";\nimport Search from \"./containers/search\";\nimport TestPage from \"./containers/testPage\";\n\n// https://css-tricks.com/the-hooks-of-react-router/\nfunction App() {\n  return (\n    <Switch>\n      <Route exact={true} path='/'>\n        <Home/>\n      </Route>\n      <Route path='/search'>\n        <Search/>\n      </Route>\n      <Route path='/test'>\n        {TestPage}\n      </Route>\n      <Route component={Search}/>\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this interface and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  createAction,\n  ActionType,\n  createReducer\n} from 'typesafe-actions';\n\ninterface CounterState {\n  count: number;\n}\n\nconst initialState: CounterState = {\n  count: 0\n};\n\nconst INCREASE = 'counter/INCREASE';\nconst DECREASE = 'counter/DECREASE';\nconst INCREASE_BY = 'counter/INCREASE_BY';\n\nexport const increase = createAction(INCREASE)();\n// () => ({ type: INCREASE })\nexport const decrease = createAction(DECREASE)();\n// () => ({ type: DECREASE })\nexport const increaseBy = createAction(INCREASE_BY)<number>();\n// (payload: number) => ({ type: INCREASE_BY, payload })\n// 액션의 페이로드로 들어가는 값은 Generic을 사용하여 정해줄 수 있으며,\n// 만약 액션의 페이로드에 아무것도 필요 없다면 Generic을 생략하시면 됩니다.\n\nconst actions = { increase, decrease, increaseBy };\n\ntype CounterAction = ActionType<typeof actions>;\n\nconst counter = createReducer<CounterState, CounterAction>(initialState)\n  .handleAction(increase, state => ({ count: state.count + 1 }))\n  .handleAction(decrease, state => ({ count: state.count - 1 }))\n  .handleAction(increaseBy, (state, action) => ({\n    count: state.count + action.payload\n  }));\n\nexport default counter;\n","import {combineReducers} from \"redux\";\nimport counter from \"../modules/counter\";\n\nconst rootReducer = combineReducers({\n  counter,\n  // articles\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from '../lang/en.json';\nimport ko from '../lang/ko.json';\n\nconst resources = {\n  en: {\n    translation: en\n  },\n  ko: {\n    translation: ko\n  }\n};\n\ni18next.use(initReactI18next)\n  .init({\n    resources: resources,\n    lng: \"ko\",\n    fallbackLng: 'ko',\n    // ns: ['translation'],\n    // defaultNS: \"translation\",\n    debug: true,\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false\n    } // react already safes from xss\n  });\n\nexport default i18next;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/styles/base.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport {CssBaseline} from \"@material-ui/core\";\nimport rootReducer from \"./interface/types\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport './static/lang/i18n';\nimport {createStore} from \"redux\";\n\nconst store = createStore(rootReducer);\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    // primary: {\n    //   main: \"#d93025\",\n    //   light: \"#fce8e6\",\n    //   dark: \"#cccccc\",\n    //   contrastText: \"#3c4043\"\n    // },\n    // secondary: {\n    //   light: \"#ff6659\",\n    //   main: \"#d32f2f\",\n    //   dark: \"#9a0007\",\n    //   contrastText: \"#ffffff\"\n    // },\n    // text: {\n    //   primary: \"#3c4043\",\n    //   secondary: \"rgba(0, 0, 0, 0.54)\",\n    // }\n  },\n  typography: {\n    fontFamily: 'Roboto, sans-serif',\n    fontSize: 14,\n    fontWeightRegular: 500,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <BrowserRouter forceRefresh={true}>\n          <App/>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/memo.e07981d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.84b1411d.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh.96c48931.svg\";"],"sourceRoot":""}